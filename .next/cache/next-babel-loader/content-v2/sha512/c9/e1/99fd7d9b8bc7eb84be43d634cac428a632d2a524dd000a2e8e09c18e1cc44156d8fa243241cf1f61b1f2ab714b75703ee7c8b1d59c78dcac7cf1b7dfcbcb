{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Mohit\\\\Documents\\\\Javascript Projects\\\\meetups-next\\\\pages\\\\[meetupId].js\",\n    _this = this;\n\nimport MeetupDetail from '../components/meetups/MeetupDetail';\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/Mohit/Documents/Javascript Projects/meetups-next/pages/[meetupId].js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;;;;AACA,OAAOA,YAAP,MAAyB,oCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAChC,sBACC,QAAC,YAAD;AACC,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADzB;AAEC,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFzB;AAGC,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH3B;AAIC,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ/B;AAAA;AAAA;AAAA;AAAA,WADD;AAQA,CATD;;KAAMN,a;;AA0CN,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from 'mongodb';\r\nimport MeetupDetail from '../components/meetups/MeetupDetail';\r\n\r\nconst MeetupDetails = (props) => {\r\n\treturn (\r\n\t\t<MeetupDetail\r\n\t\t\timage={props.meetupData.image}\r\n\t\t\ttitle={props.meetupData.title}\r\n\t\t\taddress={props.meetupData.address}\r\n\t\t\tdescription={props.meetupData.description}\r\n\t\t/>\r\n\t);\r\n};\r\nexport const getStaticPaths = async () => {\r\n\tconst client = await MongoClient.connect(\r\n\t\t`mongodb+srv://mohit:mohit@cluster0.ohtnj.mongodb.net/meetups?retryWrites=true&w=majority`\r\n\t);\r\n\tconst db = client.db();\r\n\tconst meetupCollection = db.collection('meetups');\r\n\tconst meetups = await meetupCollection.find({}, { _id: 1 }).toArray(); //first arg defines that no filter is added second argument defines which fields should be extracted\r\n\tclient.close();\r\n\treturn {\r\n\t\tfallback: false,\r\n\t\tpaths: meetups.map((meetup) => ({\r\n\t\t\tparams: { meetupId: meetup._id.toString() }, //dynamically generating arraay of paths\r\n\t\t})),\r\n\t};\r\n};\r\nexport const getStaticProps = async (context) => {\r\n\tconst meetupId = context.params.meetupId;\r\n\tconst client = await MongoClient.connect(\r\n\t\t`mongodb+srv://mohit:mohit@cluster0.ohtnj.mongodb.net/meetups?retryWrites=true&w=majority`\r\n\t);\r\n\tconst db = client.db();\r\n\tconst meetupCollection = db.collection('meetups');\r\n\tconst selectedMeetup = await meetupCollection\r\n\t\t.findOne({ _id: ObjectId(meetupId) })\r\n\t\t.toArray();\r\n\tclient.close();\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetupData: selectedMeetup,\r\n\t\t},\r\n\t};\r\n};\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}